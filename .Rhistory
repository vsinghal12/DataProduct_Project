cacheSolve(demoMatrix)
demoMatrix<-makeCacheMatrix(matrix(1:16,4,4))
demoMatrix$get()
cacheSolve(demoMatrix)
demoMatrix<-makeCacheMatrix(matrix(c(-1,2,-1,3),2,2))
demoMatrix$get()
demoMatrix$getInverse()
cacheSolve(demoMatrix)
demoMatrix<-makeCacheMatrix(matrix(c(-1,2,-1,3,2,1),2,3))
det(demoMatrix)
demoMatrix
demoMatrix$get()
y<-demoMatrix$get()
y
det(y)
demoMatrix<-makeCacheMatrix(matrix(1:9,3,3))
y<-demoMatrix$get()
det(y)
demoMatrix<-makeCacheMatrix(matrix(c(1,1,4,0,3,1,4,4,0),3,3))
y<-demoMatrix$get()
det(y)
demoMatrix$get()
cacheSolve(demoMatrix)
cacheSolve(demoMatrix)
demoMatrix$getInverse()
getwd()
source('C:/Users/Vivek/Desktop/DataScience/Rprogramming Course/cacheMatrix.R')
git clone https://github.com/vsinghal12/ProgrammingAssignment2.git
source('C:/Users/Vivek/Desktop/DataScience/Rprogramming Course/ProgrammingAssignment2/cachematrix.R')
demoMatrix<-makeCacheMatrix(c(1:4,2,2))
demoMatrix$get()
demoMatrix<-makeCacheMatrix(1:4,2,2)
demoMatrix<-makeCacheMatrix(matrix(1:4,2,2))
demoMatrix$get()
demoMatrix$getInverse()
cacheSolve(demoMatrix)
source('C:/Users/Vivek/Desktop/DataScience/Rprogramming Course/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Vivek/Desktop/DataScience/Rprogramming Course/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Vivek/Desktop/DataScience/Rprogramming Course/ProgrammingAssignment2/cachematrix.R')
demoMatrix<-makeCacheMatrix(matrix(1:4,2,2))
demoMatrix$get()
cacheSolve(demoMatrix)
source('C:/Users/Vivek/Desktop/DataScience/Rprogramming Course/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Vivek/Desktop/DataScience/Rprogramming Course/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(10)
x<-rep(0:1,each=5)
e<-rnorm(10,0,20)
y<-.5+2*x+e
plot(x,y)
library(datasets)
Rprof()
fit<-lm(y~x1+x2)
library(swirl)
swirl
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10,replace = FALSE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,prob = c(.3,.7))
flips<-sample(c(0,1),100,replace = TRUE,prob = c(.3,.7))
flips
sum(flips$1)
sum(flips)
?rbinom
rbinom(1,100,.7)
flips2<-rbinom(100,1,.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,10,25)
rnorm(10,100,25)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist)
plot(x=cars$speed,y=cars$dist, xlab="Speed")
plot(x=cars$speed,y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed" ,ylab="Stopping Distance")
plot(cars, main="My Plot")
dd
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(mpg~cyl)
boxplot(data(mtcars),mpg~cyl)
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("ggplot2")
library(ggplot2)
library(nlme)
library(lattice)
xyplot(weight~Time | Diet, BodyWeight)
str(BodyWeight)
library(datasets)
data("airquality")
airquality=transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets = .~Month)
qplot(votes,rating,data=movies)+geom_smooth()
library(swirl)
rm(list=ls())
install_from_swirl("Getting and Cleaning Data")
library(swirl)
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
package_version("dplyr")
packageVersion("dplyr")
cran<tbl_df(mydf)
cran<-tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
(-5:20)
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version=="3.1.1",country=="IN")
filter(cran,country=="IN")
filter(cran,r_version<="3.1.1",country=="IN")
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US" | country=="IN")
filter(cran,size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version)=="FALSE")
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count,probs = .99)
filter(pack_sum,count>679)
filter(pack_sum,count > 679)
top_counts<-filter(pack_sum,count>679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts)
View(top_counts_sorted)
quantile(pack_sum$unique,probs=.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
print
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,into = c("sex","class"))
submit()
submit()
submit()
students3
?gather
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed<-passed%>% mutate(status="passed")
failed<-failed %>% mutate(status="failed")
bind_rows(passed,failed)
sat
str(sat)
names(sat)
submit()
submit()
getwd()
submit()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package="lubridate")
help(package = lubridate)
this_day<-today()
this_day
yeare(this_day)
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
this_moment<-update(this_moment,hours=18,minutes=16,seconds=54)
this_moment
nyc<-now("America/New_York")
nyc
nyc+days(2)
depart(nyc+days(2))
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-nyc+hours(15)+minutes(50)
arrive<-depart+hours(15)+minutes(50)
?with_tz()
?with_tz
arrive<-with_tz(arrive,tzone = "Asia/Hong_Kong")
arrive
last_time<-myd("June 17 2008",tz="Singapore")
last_time<-mdy("June 17 2008",tz="Singapore")
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
?qunif
qunif(p=.75,min = 0,max = 1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
rowsum(temp)
rowsum(temp,1)
?rowsum
rowsum(temp,temp[1,])
sum(temp[1,])
sum(temp[1,])*sum(temp[2,])
sum((temp[1,])*temp[2,])
(.75*.3)/((.75*.3)+(.48*.7))
library(devtools)
install_github("ropensci/plotly")
library(devtools)
choose(5,4)*.5^5+choose(5,5)*.5*5
choose(5,4)*.5^5+choose(5,5)*.5^5
qnorm(.95,1100,75)
se<-75^2/100
qnorm(.95,1100,se)
se<-75/sqrt(100)
qnorm(.95,1100,se)
ppois(10,lambda = 5*3)
library(devtools)
install.packages("devtools")
library(devtools)
data(sleep)
str(sleep)
head(sleep)
names(sleep)
library(ggplot2)
g <- ggplot(sleep, aes(x = group, y = extra, group = factor(ID)))
g <- g + geom_line(size = 1, aes(colour = ID)) + geom_point(size =10, pch = 21, fill = "salmon", alpha = .5)
g
mu<-1100
n<-9
dev<-30
mu+c(-1,1)*qt(.975,n-1)*dev/sqrt(n)
?qt
library(reshape2)
library(datasets)
data("ChickWeight")
str(ChickWeight)
head(ChickWeight)
wideCw<-dcast(ChickWeight,Diet+Chick~Time,value.var = "weight")
head(wideCw)
names(wideCw)[-(1,2)]<-paste("time",names(wideCw)[-(1,2)],sep"")
names(wideCw)[-c(1,2)]<-paste("time",names(wideCw)[-c(1,2)],sep"")
names(wideCw)[-(1:2)]<-paste("time",names(wideCw)[-(1:2)],sep"")
names(wideCw)[-c(1,2)]<-paste("time",names(wideCw)[-c(1,2)],sep="")
head(wideCw)
library(dplyr)
wideCw<-mutate(wideCw,gain=time21-time0)
head(wideCw)
g <- ggplot(ChickWeight, aes(x = Time, y = weight,
colour = Diet, group = Chick))
g <- g + geom_line()
g <- g + stat_summary(aes(group = 1), geom = "line", fun.y = mean, size = 1, col = "black")
g <- g + facet_grid(. ~ Diet)
g
ny<-9;nx<-9;muY<--3;muX<-1
devY<-1.5;devX<-1.8
devPooled<-sqrt(((nx-1)*devX^2+(ny-1)*devY^2)/(ny+nx-2))
CI<-muY-muX+c(-1,1)*qt(.95,df=ny+nx-2)*devPooled*(1/nx+1/ny)^.5
CI
install.packages("UsingR")
library(UsingR)
data("father.son")
t.test(father.son$sheight - father.son$fheight)
pt(2.5,15,lower.tail = FALSE)
subject<-c(1,2,3,4,5)
baseline<-c(140,138,150,148,135)
week2<-c(132,135,151,146,130)
examination<-dataframe(subject,baseline,week2)
examination<-data.frame(subject,baseline,week2)
examination
?t.test
pval<t.test(x=examination$baseline,y=examination$week2,alternative = "two.sided",paired = TRUE)$p.value
pval<-t.test(x=examination$baseline,y=examination$week2,alternative = "two.sided",paired = TRUE)$p.value
pval
n<-9
mu0<-1100
sdev<-30
quantile<-.975
CI<-mu0+c(-1,1)*qt(quantile,n-1)*sdev/sqrt(n)
CI
n<-4
x<-3
?binom.test
binom.test(x,n,alternative = less)$p.value
binom.test(x,n,alternative = "less")$p.value
binom.test(x,n,alternative = "greater")$p.value
rate<-100
?poisson.test
lambda<-10/1787
?poisson
poisson.test(lambda,rate,alternative = "greater")$p.value
?poisson.test
poisson.test(10,1787,rate,alternative = "greater")$p.value
poisson.test(10,1787,rate,alternative = "less")$p.value
rate=1/100
poisson.test(10,1787,rate,alternative = "less")$p.value
n<-18
ny<-9
nx<-9
xy<-3
xx<-1
sy<-1.5
sx<-1.8
sp<-(((nx-1)*sx^2+(ny-1)*sy^2)/(nx+ny-2))
?pt
pt((xy-xx)/(sp*(1/nx+1/ny)^.5),ny+nx-2)
pt((xy-xx)/(sp*(1/nx+1/ny)^.5),df=ny+nx-2)
1-pt((xy-xx)/(sp*(1/nx+1/ny)^.5),df=ny+nx-2)
power.t.test(n=100,delta = .01,sd=.04,type = "one.sample",alternative = "one.sided")$power
power.t.test(power = .9,delta = .01,sd=.04,type = "one.sample",alternative = "one.sided")$n
library(shiny)
library(swirl)
swirl()
swirl()
head(PM2.5)
head(pollution)
dim(pollution)
pollution$pm25
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm,col = blue)
boxplot(ppm,col = "blue")
library(swirl)
swirl()
abline(h=12)
hist(ppm,col = "green")
rug(ppm)
low
high
hist(ppm,col = "green",breaks=100)
rug(ppm)
hist(ppm,col = "green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-table(pollution$region)
reg
barlot(reg,col="wheat",main="Number of Counties in Each Region")
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(y~x, data = pollution,col="red")
boxplot(pm25~region, data = pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region="east")
east<-subset(pollution,region=="east")
head(east)
hist(pm25,col="green")
hist(east$pm25,col="green")
hist(subset(pollution,pm25=="west")$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
plot(poluttion,latitude~pm25)
plot(polution,latitude~pm25)
plot(pollution,latitude~pm25)
plot(pollution,latitude,pm25)
ds
plot(pollution$latitude,pollution$pm25)
(pollution,plot(latitude,pm25))
(pollution, plot(latitude,pm25))
with(pollution, plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<-subset(pollution,reigon=="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
swirl()
setwd("C:/Users/Vivek/Desktop/DataScience/DevelopingDataProducts/DevDataProds CP/DataProd_Presentation")
library(slidify)
publish(user = "vsinghal12", repo = "DataProduct_Project")
system('which git')
